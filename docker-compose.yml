version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: yedt-backend
    restart: unless-stopped
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - "${PORT:-5000}:${PORT:-5000}"
    depends_on:
      - postgres
    networks:
      - yedt-network
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT:-5000}/"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: yedt-postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-prod_secure_password_placeholder}
      POSTGRES_DB: ${DB_NAME:-yedt_case}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - yedt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  yedt-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local