name: Build

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build ve Docker İmajı Oluştur
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Kodu Kontrol Et
        uses: actions/checkout@v3

      - name: Node.js Kurulumu
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Bağımlılıkları Yükle
        run: npm ci

      - name: Typescript Build
        run: npm run build
        
      - name: Build Artefaktını Arşivle
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/
          retention-days: 7

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Docker Buildx Kurulumu
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Build ve Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      - name: Docker İmaj Özeti
        if: github.event_name != 'pull_request'
        run: |
          echo "Docker imajı başarıyla oluşturuldu ve yayınlandı:"
          echo "İmaj etiketleri: ${{ steps.meta.outputs.tags }}"